// Generated by CoffeeScript 1.10.0
(function() {
  var _, async, config, http, path, profiles, warm_cache;

  _ = require('lodash');

  config = require('config');

  http = require('http');

  async = require('async');

  path = require('path');

  profiles = _.values(config.get('profile'));

  warm_cache = function(req, res) {
    var identifier, warm_profile;
    identifier = req.params.id;
    warm_profile = function(url_part, callback) {
      var full_path, full_url, scheme;
      full_path = path.join(req.headers.host, config.get('prefix'), identifier, url_part);
      scheme = req.connection.encrypted != null ? 'https' : 'http';
      full_url = scheme + "://" + full_path;
      return http.get(full_url, function(res) {
        console.log(full_url);
        return callback();
      }).on('error', function(e) {
        return callback(true);
      });
    };
    return async.each(profiles, warm_profile, function(err) {
      if (err) {
        return res.status(400).send('unable to warm cache');
      } else {
        return res.status(200).send(profiles);
      }
    });
  };

  module.exports = warm_cache;

}).call(this);
