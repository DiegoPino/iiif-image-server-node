# Choose which JP2 binaries to use.
# These binaries must be in the PATH of the user who runs the image server.
# kdu => Kakadu => kdu_jp2info and kdu_expand
# opj => OpenJPEG => opj_dump and opj_decompress

jp2_binary: 'opj'
cache:
  # Options for base_path are:
  # tmpdir: Use the system temporary directory
  # public: Use the project's public directory. This can be useful for allowing
  #         the web server, say behind Passenger, to serve up the image files
  #         directly never hitting Node.
  # Any other string will be treated like a directory path.
  base_path: 'public'
  image:
    ttl: 86400
    checkperiod: 3600
  info:
    ttl: 86400
    checkperiod: 3600

resolver:
  # Source image resolver. If the base_path is falsey then the images directory
  # in this project will be used. Any other value ought to be the full base
  # path for resolving images.
  base_path: false
  # Valid values for type include:
  # simple: For using the full identifier name as the name of the file directly
  #         underneath the base_path.
  # nested: Takes the nested_number number of characters off the front of the
  #         filename and uses that as the top level directory. This can be
  #         useful for partitioning your access derivative images.
  # pairtree: Follows the Pairtree spec in splitting up an identifier into
  #           nested directory names two characters at a time.
  type: simple
  # type: nested
  # nested_number: 2

# Do you want to allow images to be resized above the size of the extracted
# region? You can change this factor to allow upscaling up to
# upsize_factor * params.region.w
# A value of 1 means that no upsizing will be allowed.
# So an upsize_factor of 2 would allow extracted regions to be upsized to no
# more than twice their size. This number is used to check the validity
# of the incoming request and reject any requests for images that are too large.
# Note that if you begin with a larger upsize_factor and then decrease this
# number you may have to clear your image cache as with some settings
# (cache.image.base_path == 'public') the image server code that checks for this
# may never see the request as the web server might be serving static assets
# directly out of the public directory.
upsize_factor: 1

# Should the routes for the openseadragon viewer be enabled?
viewer: true

# Set the CORS headers you want for the info.json response.
# By default everywhere is allowed. To turn off CORS change this value
# to false. To restrict it change it to another string.
cors: '*'
# cors: false
